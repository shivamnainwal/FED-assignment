import type { ConditionalKeys } from 'type-fest';
export declare const GiphyRendition: {
    readonly Original: "original";
    readonly OriginalStill: "original_still";
    readonly Preview: "preview";
    readonly Looping: "looping";
    readonly FixedHeight: "fixed_height";
    readonly FixedHeightStill: "fixed_height_still";
    readonly FixedHeightDownsampled: "fixed_height_downsampled";
    readonly FixedHeightSmall: "fixed_height_small";
    readonly FixedHeightSmallStill: "fixed_height_small_still";
    readonly FixedWidth: "fixed_width";
    readonly FixedWidthStill: "fixed_width_still";
    readonly FixedWidthDownsampled: "fixed_width_downsampled";
    readonly FixedWidthSmall: "fixed_width_small";
    readonly FixedWidthSmallStill: "fixed_width_small_still";
    readonly Downsized: "downsized";
    readonly DownsizedSmall: "downsized_small";
    readonly DownsizedMedium: "downsized_medium";
    readonly DownsizedLarge: "downsized_large";
    readonly DownsizedStill: "downsized_still";
};
export type GiphyRendition = (typeof GiphyRendition)[keyof typeof GiphyRendition];
export type GiphyClipsRendition = Exclude<GiphyRendition, 'preview' | 'looping' | 'fixed_width_small' | 'fixed_width_small_still' | 'fixed_height_small' | 'fixed_height_small_still' | 'downsized_small' | 'downsized_still' | 'downsized'>;
export declare const GiphyClipsRendition: Record<ConditionalKeys<typeof GiphyRendition, GiphyClipsRendition>, GiphyClipsRendition>;
//# sourceMappingURL=giphyRendition.d.ts.map