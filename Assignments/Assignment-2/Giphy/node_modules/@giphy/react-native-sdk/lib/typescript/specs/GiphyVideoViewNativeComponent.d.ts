import type { DirectEventHandler, Int32 } from 'react-native/Libraries/Types/CodegenTypes';
import type { HostComponent } from 'react-native';
import type { ViewProps } from 'react-native/Libraries/Components/View/ViewPropTypes';
export declare const GiphyVideoViewPlaybackState: {
    readonly Unknown: 0;
    readonly ReadyToPlay: 3;
    readonly Playing: 4;
    readonly Paused: 5;
};
export type GiphyVideoViewPlaybackState = (typeof GiphyVideoViewPlaybackState)[keyof typeof GiphyVideoViewPlaybackState];
export type GiphyVideoViewMuteEvent = Readonly<{}>;
export type GiphyVideoViewUnmuteEvent = Readonly<{}>;
export type GiphyVideoViewPlaybackStateChangeEvent = Readonly<{
    state: Int32;
}>;
export type GiphyVideoViewErrorEvent = Readonly<{
    description: string;
}>;
export interface NativeProps extends ViewProps {
    autoPlay: boolean;
    mediaId?: string;
    muted: boolean;
    onError?: DirectEventHandler<GiphyVideoViewErrorEvent>;
    onMute?: DirectEventHandler<GiphyVideoViewMuteEvent>;
    onPlaybackStateChanged?: DirectEventHandler<GiphyVideoViewPlaybackStateChangeEvent>;
    onUnmute?: DirectEventHandler<GiphyVideoViewUnmuteEvent>;
}
declare const _default: HostComponent<NativeProps>;
export default _default;
//# sourceMappingURL=GiphyVideoViewNativeComponent.d.ts.map